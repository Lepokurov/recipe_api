АВТОРИЗАЦИЯ
GET: '/login', нужно указать в params: 'nickname' - авторизация

POST: '/registration', нужно указать в body: 'nickname', возможны форматы form-data/json - регистрация и автоматическая авторизация

GET: '/logout', без параметров - выход из профиля 


Без авторизации дальнейший функционал не доступен.


ВЗАИМОДЕЙСТВИЕ С РЕЦЕПТАМИ
GET: '/get_recipe', нужно указать в params: 'name' - показать информацию о конкретном рецепте

GET: '/get_recipes_list', нужно указать один или несколько в params: 'name', 'user', 'dish_type', 'hashtags': текст, - показать список рецептов по параметрам
                                                                     'image': True / не указывать, 
                                                                     'order': date / likes / name / id / не указывать.

GET: '/get_recipes_list_favorites', без параметров - показать список избранных рецептов пользователя

POST: '/add_recipe', нужно указать в body: 'name', 'description', 'steps', 'image', 'hashtags', 'dish_type' возможны форматы form-data/json - добавить рецепт
Если указать в dish_type не один из (салат, первое, второе, суп, десерт, напиток), то вернеться ошибка

POST: '/like_recipe'  нужно указать в body: 'name' - пользователь ставит лайк рецепту

POST: '/favorite_recipe' нужно указать в body: 'name' - пользователь добавляет рецепт в избранное

PUT: '/change_recipe' нужно указать в params: 'name', нужно указать один или несколько в body: 'name', 'description', - Пользователь изменяет свой рецет
                                                                                               'steps', 'image', 'hashtags', 'dish_type', 
                                                                                                возможны форматы form-data/json 
Если указать в dish_type не один из (салат, первое, второе, суп, десерт, напиток), то вернеться ошибка

DELETE: '/delete_recipe' нужно указать в params: 'name' - удаляет рецепт пользователя


ВЗАИМОДЕЙСТВИЕ С ПОЛЬЗОВАТЕЛЯМИ
GET: '/get_user', нужно указать в params: 'nickname' - показать информацию о конкретном пользователе

GET: '/get_users_list', без параметров - показать список из 10 пользоватлей упорядоченных по количеству добавленных рецептов

PUT: '/update_user', нужно указать в body: 'nickname' - Изменить собсвенный никнейм

DELETE: '/delete_user', без параметров - Удалить себя


Функционал исключительно для администратора
PUT: '/block_recipe', нужно указать в params: 'name' - заблокирать рецепт
PUT: '/unblock_recipe', нужно указать в params: 'name' - разблокирать рецепт

PUT: '/block_user', нужно указать в params: 'nickname' - заблокирать пользователя
PUT: '/unblock_user', нужно указать в params: 'nickname' - разблокирать пользователя
